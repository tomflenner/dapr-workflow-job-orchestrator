services:
  workflow-app:
    image: workflow-app
    pull_policy: never
    user: root
    environment:
      - DAPR_HTTP_PORT=3500
      - REGISTER_WORKFLOWS=true
      - REGISTER_ACTIVITIES=true
    build:
      context: .
      dockerfile: Workflow/Dockerfile
    ports:
      - 3500:3500
      - 3501:8080
    networks:
      - workflow-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  workflow-app-dapr:
    image: "daprio/daprd:1.15.3"
    command: ["./daprd",
               "-app-id", "workflow-app",
               "-app-port", "8080",
               "-placement-host-address", "placement:50005",
              "-scheduler-host-address", "scheduler-0:50006",
               "-resources-path", "/components",
               "-log-level","info"]
    volumes:
      - "./components/:/components"
    depends_on:
      scheduler-0:
        condition: service_started
      postgres-db:
        condition: service_healthy
    network_mode: "service:workflow-app"
  
  placement:
    image: "daprio/dapr:1.15.3"
    command: ["./placement",
               "-port", "50005",
               "-log-level","warn"]
    networks:
      - workflow-network
        
  scheduler-0:
    image: "daprio/dapr:1.15.3"
    command: ["./scheduler",
              "--etcd-data-dir", "/var/run/dapr/scheduler"
    ]
    volumes:
      - ./dapr_scheduler/0:/var/run/dapr/scheduler
    networks:
      - workflow-network

  postgres-db:
    image: postgres:16.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=wO2VGDsMKR
      - max_wal_size=2GB
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - workflow-network
    volumes:
      - postgres-db-16-2:/var/lib/postgresql/data

networks:
  workflow-network:
    external: true

volumes:
  postgres-db-16-2:
    driver: local